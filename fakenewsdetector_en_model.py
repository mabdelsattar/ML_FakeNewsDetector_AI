# -*- coding: utf-8 -*-
"""FakeNewsDetector_En_Model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1z2sSxVSGF_7Nff_bUVkhIJ_5Na55efZ2
"""

import kagglehub

# Download latest version
path = kagglehub.dataset_download("emineyetm/fake-news-detection-datasets")

print("Path to dataset files:", path)

import pandas as pd
from sklearn.model_selection import train_test_split, cross_val_score
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix
from sklearn.feature_extraction.text import TfidfVectorizer


# Download latest version
fake_df = pd.read_csv('/kaggle/input/fake-news-detection-datasets/News _dataset/Fake.csv')
real_df = pd.read_csv('/kaggle/input/fake-news-detection-datasets/News _dataset/True.csv')

fake_df['label'] = 0
real_df['label'] = 1
# fake_df.shape

df = pd.concat([fake_df, real_df], ignore_index=True)
df['text'] = df['title'].fillna('') + ' ' + df['text'].fillna('')
df = df[['text', 'label']]
x = df['text']
y = df['label']
# y.head()
X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)
# Convert text to numeric features
vectorizer = TfidfVectorizer(stop_words='english', max_df=0.7)
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

model = LogisticRegression()
model.fit(X_train_tfidf, y_train)

# Predict
y_pred = model.predict(X_test_tfidf)
accuracy = accuracy_score(y_test, y_pred)
print("Model Accuracy:", accuracy)

# # Example prediction function
# def predict_news(text):
#     print(text)
#     text_vector = vectorizer.transform([text])  # transform to numeric
#     prediction = model.predict(text_vector)#X_test_tfidf[1]
#     return "Fake News" if prediction[0] == 0 else "Real News"

# while True:
#   user_input = input("\nEnter a news article (or type 'exit'): ")
#   if user_input.lower() == 'exit':
#       break
#   print("Prediction:", predict_news(user_input))

import joblib  # to save and load model
from google.colab import files

joblib.dump(model, 'en_model.pkl')
files.download('en_model.pkl')